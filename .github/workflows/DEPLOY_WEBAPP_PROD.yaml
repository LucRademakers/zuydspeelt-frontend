name: Deployment To Azure (PROD)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  send_started_notification:
    name: Send Started Notification
    runs-on: ubuntu-latest
    steps:
    - name: Check GitHub Repository
      uses: actions/checkout@v3.5.2
      
    - name: Send Started Notification
      uses: mikesprague/teams-incoming-webhook-action@v1
      with:
        github-token: ${{ github.token }}
        webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URL }}
        deploy-card: true
        title: '${{ GITHUB.WORKFLOW }} (STARTED)'
        color: 'info'
        timezone: "Europe/Amsterdam"
        
  build_and_deploy:
    needs: send_started_notification
    name: Build/Deploy Latest Docker Image To Azure Web App Service
    runs-on: ubuntu-latest
    steps:
    - name: Check GitHub Repository
      uses: actions/checkout@v3.5.2

    - name: Authenticate To Azure Using A Service Principal
      uses: azure/login@v1.4.6
      with:
        creds: '{"clientId":"${{ secrets.CLIENT_ID }}","clientSecret":"${{ secrets.CLIENT_SECRET }}","subscriptionId":"${{ secrets.SUBSCRIPTION_ID }}","tenantId":"${{ secrets.TENANT_ID }}"}'
    
    - name: Docker Login
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}    
        
    - name: Set Automatic Version Based By Dated
      run: |
        Date=`date +"%d%m%Y".$GITHUB_RUN_NUMBER`
        echo "version=${Date}" >> "$GITHUB_ENV"

    - name: Build & Push Image To Docker Hub
      run: |
        docker build . -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY_PROD }}:${{ env.version }}
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY_PROD }}:${{ env.version }}

    - name: Deploy Current Version To Azure Web App Service
      uses: azure/webapps-deploy@v2.2.10
      with:
        app-name: 'B2C6B-FRONTEND-PROD'
        images: '${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY_PROD }}:${{ env.version }}'
  
  send_successful_notification:
    needs: 
      - send_started_notification
      - build_and_deploy
    if: ${{ success() }}
    name: Send Succesful Notification
    runs-on: ubuntu-latest
    steps:
    - name: Check GitHub Repository
      uses: actions/checkout@v3.5.2
      
    - name: Send Successful Notification
      uses: mikesprague/teams-incoming-webhook-action@v1
      with:
        github-token: ${{ github.token }}
        webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URL }}
        deploy-card: true
        title: '${{ GITHUB.WORKFLOW }} (SUCCESSFUL)'
        color: 'success'
        timezone: "Europe/Amsterdam"
    
  send_failed_notification:
    needs:
      - send_started_notification
      - build_and_deploy
    if: ${{  failure() }} 
    name: Send Failed Notification
    runs-on: ubuntu-latest
    steps:
    - name: Check GitHub Repository
      uses: actions/checkout@v3.5.2
    
    - name: Send Failed Notification
      uses: mikesprague/teams-incoming-webhook-action@v1
      with:
        github-token: ${{ github.token }}
        webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URL }}
        deploy-card: true
        title: '${{ GITHUB.WORKFLOW }} (FAILED)'
        color: 'failure'
        timezone: "Europe/Amsterdam"
  
  send_cancelled_notification:
    needs:
      - send_started_notification
      - build_and_deploy
    if: ${{ cancelled() }}
    name: Send Cancelled Notification
    runs-on: ubuntu-latest
    steps:
    - name: Check GitHub Repository
      uses: actions/checkout@v3.5.2
      
    - name: Send Cancelled Notification
      uses: mikesprague/teams-incoming-webhook-action@v1
      with:
        github-token: ${{ github.token }}
        webhook-url: ${{ secrets.MS_TEAMS_WEBHOOK_URL }}
        deploy-card: true
        title: '${{ GITHUB.WORKFLOW }} (CANCELLED)'
        color: 'warning'
        timezone: "Europe/Amsterdam"
